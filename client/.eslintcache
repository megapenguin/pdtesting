[{"D:\\rex\\ReactReview\\demo\\client\\src\\index.js":"1","D:\\rex\\ReactReview\\demo\\client\\src\\reportWebVitals.js":"2","D:\\rex\\ReactReview\\demo\\client\\src\\App.js":"3","D:\\rex\\ReactReview\\demo\\client\\src\\views\\index.js":"4","D:\\rex\\ReactReview\\demo\\client\\src\\views\\Dashboard.js":"5","D:\\rex\\ReactReview\\demo\\client\\src\\components\\dashboard\\index.js":"6","D:\\rex\\ReactReview\\demo\\client\\src\\components\\dashboard\\StudentChartShit.js":"7","D:\\rex\\ReactReview\\demo\\client\\src\\views\\Admin.js":"8"},{"size":594,"mtime":1609825204455,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1609818579892,"results":"11","hashOfConfig":"10"},{"size":342,"mtime":1609832584793,"results":"12","hashOfConfig":"10"},{"size":50,"mtime":1609899865952,"results":"13","hashOfConfig":"10"},{"size":299,"mtime":1609818579893,"results":"14","hashOfConfig":"10"},{"size":192,"mtime":1609818579889,"results":"15","hashOfConfig":"10"},{"size":2623,"mtime":1609818579866,"results":"16","hashOfConfig":"10"},{"size":1632,"mtime":1609899896750,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1iqvjbz",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\rex\\ReactReview\\demo\\client\\src\\index.js",[],["36","37"],"D:\\rex\\ReactReview\\demo\\client\\src\\reportWebVitals.js",[],"D:\\rex\\ReactReview\\demo\\client\\src\\App.js",[],"D:\\rex\\ReactReview\\demo\\client\\src\\views\\index.js",[],"D:\\rex\\ReactReview\\demo\\client\\src\\views\\Dashboard.js",[],"D:\\rex\\ReactReview\\demo\\client\\src\\components\\dashboard\\index.js",[],"D:\\rex\\ReactReview\\demo\\client\\src\\components\\dashboard\\StudentChartShit.js",["38","39","40","41"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nfunction StudentChartShit() {\r\n  const [users, setUsers] = useState([]);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // sfsfsdfsdfsdf\r\n    axios\r\n      .get(\"/users/\")\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        let data = res.data;\r\n        setUsers(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    axios\r\n      .post(\"/users/add\", values)\r\n      .then((res) => {\r\n        let usersCopy = [...users];\r\n\r\n        usersCopy = [...usersCopy, res.data];\r\n        console.log(usersCopy);\r\n        setUsers(usersCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(\"/users/delete\", {\r\n        params: {\r\n          id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let usersCopy = [...users];\r\n\r\n        usersCopy = usersCopy.filter((user) => user.id !== id);\r\n        setUsers(usersCopy);\r\n\r\n        console.log(usersCopy);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      <Form\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"First Name\"\r\n          name=\"firstName\"\r\n          rules={[{ required: true, message: \"Please input your First Name!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Last Name\"\r\n          name=\"lastName\"\r\n          rules={[{ required: true, message: \"Please input your last Name!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      {users.map((user, index) => (\r\n        <Col key={index} md={{ span: 6 }}>\r\n          <Card className=\"shadow-sm\">\r\n            <Title>\r\n              {user.firstName} {user.lastName}\r\n            </Title>\r\n\r\n            <Button onClick={() => handleDelete(user.id)} danger>\r\n              Delete\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default StudentChartShit;\r\n","D:\\rex\\ReactReview\\demo\\client\\src\\views\\Admin.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":10,"column":3,"nodeType":"48","messageId":"49","endLine":10,"endColumn":11},{"ruleId":"46","severity":1,"message":"50","line":14,"column":16,"nodeType":"48","messageId":"49","endLine":14,"endColumn":20},{"ruleId":"46","severity":1,"message":"51","line":18,"column":10,"nodeType":"48","messageId":"49","endLine":18,"endColumn":19},{"ruleId":"46","severity":1,"message":"52","line":18,"column":21,"nodeType":"48","messageId":"49","endLine":18,"endColumn":33},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Text' is assigned a value but never used.","'firstName' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]