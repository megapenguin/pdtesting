{"version":3,"sources":["views/Reserve.js","views/UserInterface.js","views/Dashboard.js","views/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["Reserve","props","useState","isModalVisible","setIsModalVisible","Form","useForm","form","setConfirmLoading","setIfCanceled","handleCancel","type","onClick","console","log","info","title","visible","onOk","onCancel","footer","className","htmlType","layout","name","initialValues","remember","onFinish","values","axios","post","providerId","id","userId","vehiclePlatenumber","platenumber","parkingStart","parkingEnd","then","res","setTimeout","Modal","success","content","catch","error","onFinishFailed","errorInfo","Item","label","rules","required","message","Search","Input","Title","Typography","UserInterface","providers","setProviders","useEffect","get","data","justify","align","style","minHeight","level","placeholder","onSearch","value","_res","enterButton","map","provider","index","orientation","parkingLotName","parkingLotLocation","parkingLotStatus","Dashboard","Layout","Header","Content","Footer","Sider","Admin","fallback","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb3fb7b6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Input } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nfunction Reserve(props) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [ifCanceled, setIfCanceled] = useState(false);\r\n  let parkingStart = \"00:00:00\";\r\n  let parkingEnd = \"00:00:00\";\r\n  let userId = \"3\";\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n    console.log(props.info);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    //console.log(ifChanged);\r\n    setConfirmLoading(true);\r\n    setIfCanceled(false);\r\n    // props.passedData(props.info);\r\n\r\n    axios\r\n      .post(\"/transactions/create_transaction\", {\r\n        providerId: props.info.id,\r\n        userId: userId,\r\n        vehiclePlatenumber: values.platenumber,\r\n        parkingStart: parkingStart,\r\n        parkingEnd: parkingEnd,\r\n      })\r\n      .then((res) => {\r\n        setTimeout(() => {\r\n          setIsModalVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n\r\n        Modal.success({\r\n          content: \"Successfully Reserved a slot\",\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    //console.log(ifChanged);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    Modal.error({\r\n      content: \"Failure to Update Barangay Info\",\r\n    });\r\n    setTimeout(() => {\r\n      setIsModalVisible(true);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n    // console.log(\"Failed:\", errorInfo);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showModal}>\r\n        Reserve\r\n      </Button>\r\n      <Modal\r\n        title=\"Reserve Slot\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={[\r\n          <Button key=\"back\" className=\"modal-button\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>,\r\n          <Button\r\n            form=\"myForm\"\r\n            className=\"modal-button\"\r\n            htmlType=\"submit\"\r\n            type=\"primary\"\r\n          >\r\n            Update\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          layout=\"vertical\"\r\n          name=\"basic\"\r\n          form={form}\r\n          initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          id=\"myForm\"\r\n        >\r\n          <Form.Item\r\n            label=\"Please Enter Platenumber:\"\r\n            name=\"platenumber\"\r\n            rules={[\r\n              { required: true, message: \"Please input vehicle platenumber\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reserve;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Space,\r\n  Button,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  Modal,\r\n  Divider,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport Reserve from \"./Reserve\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction UserInterface() {\r\n  const [providers, setProviders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/providers/\")\r\n      .then((res) => {\r\n        let data = res.data;\r\n        setProviders(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const onSearch = (value) => {\r\n    axios\r\n      .post(\"/providers/search_parkinglot\", { value: value })\r\n      .then((_res) => {\r\n        let data = _res.data;\r\n        setProviders(data);\r\n      });\r\n\r\n    //console.log(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginCard\">\r\n      <Row\r\n        type=\"flex\"\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        style={{ minHeight: \"80vh\" }}\r\n      >\r\n        <Col>\r\n          <Card\r\n            title={<Title level={3}>Search ParkingLot</Title>}\r\n            className=\"loginCardStyle\"\r\n          >\r\n            <Row>\r\n              <Search\r\n                placeholder=\"Enter Barangay\"\r\n                onSearch={onSearch}\r\n                enterButton\r\n              />\r\n            </Row>\r\n            {providers.map((provider, index) => (\r\n              <Row key={index} justify=\"space-between\">\r\n                <Divider orientation=\"left\"></Divider>\r\n\r\n                <Col>\r\n                  <Title level={4}>{provider.parkingLotName}</Title>\r\n                  <Row>Location: {provider.parkingLotLocation}</Row>{\" \"}\r\n                  <Row>Status: {provider.parkingLotStatus}</Row>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Reserve info={provider} />\r\n                </Col>\r\n              </Row>\r\n            ))}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserInterface;\r\n","import React, { Suspense } from \"react\";\r\n\r\nimport { StudentChartShit } from \"../components/dashboard\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div>\r\n      <Suspense fallback={<h1>LOADING</h1>}>\r\n        <StudentChartShit />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Suspense } from \"react\";\r\nimport UserInterface from \"./UserInterface\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  UploadOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nfunction Admin() {\r\n  return (\r\n    <div>\r\n      <Suspense fallback={<h1>LOADING</h1>}>\r\n        <UserInterface />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import \"./App.css\";\r\n/*import { Layout, Menu } from \"antd\";\r\nimport {\r\n  UploadOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n} from \"@ant-design/icons\";\r\n*/\r\n\r\nimport { Admin } from \"./views\";\r\n//const { Header, Content, Footer, Sider } = Layout;\r\n\r\nfunction App() {\r\n  return <Admin />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}